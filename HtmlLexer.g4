/*
----------------------------------------
            LEXICAL RULES
----------------------------------------
*/

lexer grammar  HtmlLexer;

HTML_START: OPEN_TAG WHITE_SPACE* [Hh][Tt][Mm][Ll] WHITE_SPACE* CLOSE_TAG;
HTML_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][Tt][Mm][Ll] WHITE_SPACE* CLOSE_TAG;

HEAD_START: OPEN_TAG WHITE_SPACE* [Hh][Ee][Aa][Dd] WHITE_SPACE* CLOSE_TAG;
HEAD_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][Ee][Aa][Dd] WHITE_SPACE* CLOSE_TAG;

TITLE_START: OPEN_TAG WHITE_SPACE* [Tt][Ii][Tt][Ll][Ee] WHITE_SPACE* CLOSE_TAG;
TITLE_END: OPEN_TAG SLASH WHITE_SPACE* [Tt][Ii][Tt][Ll][Ee] WHITE_SPACE* CLOSE_TAG;

BODY_START: OPEN_TAG WHITE_SPACE* [Bb][Oo][Dd][Yy] WHITE_SPACE* CLOSE_TAG;
BODY_END: OPEN_TAG SLASH WHITE_SPACE* [Bb][Oo][Dd][Yy] WHITE_SPACE* CLOSE_TAG;

P_START: OPEN_TAG WHITE_SPACE* [Pp] WHITE_SPACE* CLOSE_TAG;
P_END: OPEN_TAG SLASH WHITE_SPACE* [Pp] WHITE_SPACE* CLOSE_TAG;

DIV_START: OPEN_TAG WHITE_SPACE* [Dd][Ii][Vv] WHITE_SPACE* CLOSE_TAG;
DIV_END: OPEN_TAG SLASH WHITE_SPACE* [Dd][Ii][Vv] WHITE_SPACE* CLOSE_TAG;

H1_START: OPEN_TAG WHITE_SPACE* [Hh][1] WHITE_SPACE* CLOSE_TAG;
H1_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][1] WHITE_SPACE* CLOSE_TAG;

H2_START: OPEN_TAG WHITE_SPACE* [Hh][2] WHITE_SPACE* CLOSE_TAG;
H2_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][2] WHITE_SPACE* CLOSE_TAG;

H3_START: OPEN_TAG WHITE_SPACE* [Hh][3] WHITE_SPACE* CLOSE_TAG;
H3_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][3] WHITE_SPACE* CLOSE_TAG;

H4_START: OPEN_TAG WHITE_SPACE* [Hh][4] WHITE_SPACE* CLOSE_TAG;
H4_END: OPEN_TAG SLASH WHITE_SPACE* [Hh][4] WHITE_SPACE* CLOSE_TAG;

CENTER_START: OPEN_TAG WHITE_SPACE* [Cc][Ee][Nn][Tt][Ee][Rr] WHITE_SPACE* CLOSE_TAG;
CENTER_END: OPEN_TAG SLASH WHITE_SPACE* [Cc][Ee][Nn][Tt][Ee][Rr] WHITE_SPACE* CLOSE_TAG;

SMALL_START: OPEN_TAG WHITE_SPACE* [Ss][Mm][Aa][Ll][Ll] WHITE_SPACE* CLOSE_TAG;
SMALL_END: OPEN_TAG SLASH WHITE_SPACE* [Ss][Mm][Aa][Ll][Ll] WHITE_SPACE* CLOSE_TAG;

STRONG_START: OPEN_TAG WHITE_SPACE* [Ss][Tt][Rr][Oo][Nn][Gg] WHITE_SPACE* CLOSE_TAG;
STRONG_END: OPEN_TAG SLASH WHITE_SPACE* [Ss][Tt][Rr][Oo][Nn][Gg] WHITE_SPACE* CLOSE_TAG;

EM_START: OPEN_TAG WHITE_SPACE* [Ee][Mm] WHITE_SPACE* CLOSE_TAG;
EM_END: OPEN_TAG SLASH WHITE_SPACE* [Ee][Mm] WHITE_SPACE* CLOSE_TAG;

U_START: OPEN_TAG WHITE_SPACE* [Uu] WHITE_SPACE* CLOSE_TAG;
U_END: OPEN_TAG SLASH WHITE_SPACE* [Uu] WHITE_SPACE* CLOSE_TAG;

B_START: OPEN_TAG WHITE_SPACE* [Bb] WHITE_SPACE* CLOSE_TAG;
B_END: OPEN_TAG SLASH WHITE_SPACE* [Bb] WHITE_SPACE* CLOSE_TAG;

I_START: OPEN_TAG WHITE_SPACE* [Ii] WHITE_SPACE* CLOSE_TAG;
I_END: OPEN_TAG SLASH WHITE_SPACE* [Ii] WHITE_SPACE* CLOSE_TAG;

SUB_START: OPEN_TAG WHITE_SPACE* [Ss][Uu][Bb] WHITE_SPACE* CLOSE_TAG;
SUB_END: OPEN_TAG SLASH WHITE_SPACE* [Ss][Uu][Bb] WHITE_SPACE* CLOSE_TAG;

SUP_START: OPEN_TAG WHITE_SPACE* [Ss][Uu][Pp] WHITE_SPACE* CLOSE_TAG;
SUP_END: OPEN_TAG SLASH WHITE_SPACE* [Ss][Uu][Pp] WHITE_SPACE* CLOSE_TAG;

TT_START: OPEN_TAG WHITE_SPACE* [Tt][Tt] WHITE_SPACE* CLOSE_TAG;
TT_END: OPEN_TAG SLASH WHITE_SPACE* [Tt][Tt] WHITE_SPACE* CLOSE_TAG;

UL_START: OPEN_TAG WHITE_SPACE* [Uu][Ll] WHITE_SPACE* CLOSE_TAG;
UL_END: OPEN_TAG SLASH WHITE_SPACE* [Uu][Ll] WHITE_SPACE* CLOSE_TAG;

OL_START: OPEN_TAG WHITE_SPACE* [Oo][Ll] WHITE_SPACE* CLOSE_TAG;
OL_END: OPEN_TAG SLASH WHITE_SPACE* [Oo][Ll] WHITE_SPACE* CLOSE_TAG;

LI_START: OPEN_TAG WHITE_SPACE* [Ll][Ii] WHITE_SPACE* CLOSE_TAG;
LI_END: OPEN_TAG SLASH WHITE_SPACE* [Ll][Ii] WHITE_SPACE* CLOSE_TAG;

A_START: OPEN_TAG WHITE_SPACE* [Aa] WHITE_SPACE* A_ATT WHITE_SPACE* CLOSE_TAG;
A_END: OPEN_TAG SLASH WHITE_SPACE* [Aa] WHITE_SPACE* CLOSE_TAG;

A_ATT: (A_HREF WHITE_SPACE* | A_NAME WHITE_SPACE* | A_TITLE WHITE_SPACE*)+; 
A_HREF: ATT_HREF WHITE_SPACE* [=] WHITE_SPACE* (SINGLE_QUOTE_STRING|DOUBLE_QUOTE_STRING);
A_NAME: ATT_NAME WHITE_SPACE* [=] WHITE_SPACE* (SINGLE_QUOTE_STRING|DOUBLE_QUOTE_STRING);
A_TITLE: ATT_TITLE WHITE_SPACE* [=] WHITE_SPACE* (SINGLE_QUOTE_STRING|DOUBLE_QUOTE_STRING);

DL_START: OPEN_TAG WHITE_SPACE* [Dd][Ll] WHITE_SPACE* CLOSE_TAG;
DL_END: OPEN_TAG SLASH WHITE_SPACE* [Dd][Ll] WHITE_SPACE* CLOSE_TAG;

DT_START: OPEN_TAG WHITE_SPACE* [Dd][Tt] WHITE_SPACE* CLOSE_TAG;
DT_END: OPEN_TAG SLASH WHITE_SPACE* [Dd][Tt] WHITE_SPACE* CLOSE_TAG;

DD_START: OPEN_TAG WHITE_SPACE* [Dd][Dd] WHITE_SPACE* CLOSE_TAG;
DD_END: OPEN_TAG SLASH WHITE_SPACE* [Dd][Dd] WHITE_SPACE* CLOSE_TAG;


TABLE_START: OPEN_TAG WHITE_SPACE* TABLE_TAG WHITE_SPACE* (ATT_BORDER WHITE_SPACE* [=] WHITE_SPACE* (SINGLE_QUOTE_INTEGER|DOUBLE_QUOTE_INTEGER))? WHITE_SPACE* CLOSE_TAG;
TABLE_END: OPEN_TAG SLASH WHITE_SPACE* TABLE_TAG WHITE_SPACE* CLOSE_TAG;

TBODY_START: OPEN_TAG WHITE_SPACE* [Tt][Bb][Oo][Dd][Yy] WHITE_SPACE* CLOSE_TAG;
TBODY_END: OPEN_TAG SLASH WHITE_SPACE* [Tt][Bb][Oo][Dd][Yy] WHITE_SPACE* CLOSE_TAG;

TR_START: OPEN_TAG WHITE_SPACE* [Tt][RrHh] WHITE_SPACE* CLOSE_TAG;
TR_END: OPEN_TAG SLASH WHITE_SPACE* [Tt][RrHh] WHITE_SPACE* CLOSE_TAG;

TD_START: OPEN_TAG WHITE_SPACE* [Tt][Dd] WHITE_SPACE* CLOSE_TAG;
TD_END: OPEN_TAG SLASH WHITE_SPACE* [Tt][Dd] WHITE_SPACE* CLOSE_TAG;

BR: OPEN_TAG SLASH? WHITE_SPACE* [Bb][Rr] WHITE_SPACE* SLASH? CLOSE_TAG;

FONT_START: OPEN_TAG WHITE_SPACE* [Ff][Oo][Nn][Tt] WHITE_SPACE* (ATT_SIZE WHITE_SPACE* [=] WHITE_SPACE* (SINGLE_QUOTE_INTEGER|DOUBLE_QUOTE_INTEGER))? WHITE_SPACE* CLOSE_TAG;
FONT_END: OPEN_TAG SLASH WHITE_SPACE* [Ff][Oo][Nn][Tt] WHITE_SPACE* CLOSE_TAG;

IMG: OPEN_TAG WHITE_SPACE* [Ii][Mm][Gg] WHITE_SPACE* IMG_ATT WHITE_SPACE* SLASH WHITE_SPACE* CLOSE_TAG;

IMG_ATT: (IMG_SRC WHITE_SPACE* | IMG_HEIGHT WHITE_SPACE* | IMG_WIDTH WHITE_SPACE*)+;
IMG_SRC: ATT_SRC WHITE_SPACE* [=] WHITE_SPACE* ((SINGLE_QUOTE_STRING|DOUBLE_QUOTE_STRING));
IMG_HEIGHT: ATT_HEIGHT WHITE_SPACE* [=] WHITE_SPACE* ((SINGLE_QUOTE_INTEGER|DOUBLE_QUOTE_INTEGER|[0-9]+));
IMG_WIDTH: ATT_WIDTH WHITE_SPACE* [=] WHITE_SPACE* ((SINGLE_QUOTE_INTEGER|DOUBLE_QUOTE_INTEGER|[0-9]+));

TABLE_TAG: [Tt][Aa][Bb][Ll][Ee];
ATT_BORDER: [Bb][Oo][Rr][Dd][Ee][Rr];
SINGLE_QUOTE_INTEGER: ['][0-9]+['];
DOUBLE_QUOTE_INTEGER: ["][0-9]+["];

ATT_HREF: [Hh][Rr][Ee][Ff];
ATT_TITLE: [Tt][Ii][Tt][Ll][Ee];
ATT_NAME: [Nn][Aa][Mm][Ee];
ATT_SIZE: [Ss][Ii][Zz][Ee];
ATT_SRC: [Ss][Rr][Cc];
ATT_WIDTH: [Ww][Ii][Dd][Tt][Hh];
ATT_HEIGHT: [Hh][Ee][Ii][Gg][Hh][Tt];

fragment DOUBLE_QUOTE_STRING
    : '"' ~[<"]* '"'
    ;
fragment SINGLE_QUOTE_STRING
    : '\'' ~[<']* '\''
    ;

HTML_COMMENT: '<!--' .*? '-->' ->skip;
HTML_CONDITIONAL_COMMENT: '<![' .*? ']>' ->skip;
HTML_DOCTYPE_COMMENT: '<!DOCTYPE' .*? '>' ->skip;


OPEN_TAG: '<';
CLOSE_TAG: '>';
SLASH: '/';


WHITE_SPACE
    :  (' '|'\t'|'\r'? '\n')->skip
    ;

HTML_TEXT
    :
    [a-zA-Z0-9,.?:=;&'][ a-zA-Z0-9,.?:']*
    ;
HTML_LATEX_CHAR:
    [{}_^@$\\%~#];
GREEK_TEXT: '&' [a-zA-Z]* ';';




mode TAG;
TAG_CLOSE
    : '>' -> popMode
    ;
TAG_OPEN
    : '<' -> pushMode(TAG)
    ;
TAG_SLASH_CLOSE
    : '/>' -> popMode
    ;
TAG_SLASH
    : '/'
    ;

